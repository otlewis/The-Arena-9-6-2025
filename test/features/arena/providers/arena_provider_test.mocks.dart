// Mocks generated by Mockito 5.4.5 from annotations
// in arena/test/features/arena/providers/arena_provider_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;
import 'dart:typed_data' as _i8;

import 'package:appwrite/appwrite.dart' as _i2;
import 'package:appwrite/models.dart' as _i3;
import 'package:arena/core/error/app_error.dart' as _i12;
import 'package:arena/core/logging/app_logger.dart' as _i11;
import 'package:arena/models/gift_transaction.dart' as _i10;
import 'package:arena/models/user_profile.dart' as _i7;
import 'package:arena/services/appwrite_service.dart' as _i5;
import 'package:arena/services/sound_service.dart' as _i13;
import 'package:logger/logger.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i9;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeClient_0 extends _i1.SmartFake implements _i2.Client {
  _FakeClient_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAccount_1 extends _i1.SmartFake implements _i2.Account {
  _FakeAccount_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDatabases_2 extends _i1.SmartFake implements _i2.Databases {
  _FakeDatabases_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeStorage_3 extends _i1.SmartFake implements _i2.Storage {
  _FakeStorage_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRealtime_4 extends _i1.SmartFake implements _i2.Realtime {
  _FakeRealtime_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFunctions_5 extends _i1.SmartFake implements _i2.Functions {
  _FakeFunctions_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUser_6 extends _i1.SmartFake implements _i3.User {
  _FakeUser_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSession_7 extends _i1.SmartFake implements _i3.Session {
  _FakeSession_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLogger_8 extends _i1.SmartFake implements _i4.Logger {
  _FakeLogger_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [AppwriteService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAppwriteService extends _i1.Mock implements _i5.AppwriteService {
  MockAppwriteService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Client get client => (super.noSuchMethod(
        Invocation.getter(#client),
        returnValue: _FakeClient_0(
          this,
          Invocation.getter(#client),
        ),
      ) as _i2.Client);

  @override
  set client(_i2.Client? _client) => super.noSuchMethod(
        Invocation.setter(
          #client,
          _client,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.Account get account => (super.noSuchMethod(
        Invocation.getter(#account),
        returnValue: _FakeAccount_1(
          this,
          Invocation.getter(#account),
        ),
      ) as _i2.Account);

  @override
  set account(_i2.Account? _account) => super.noSuchMethod(
        Invocation.setter(
          #account,
          _account,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.Databases get databases => (super.noSuchMethod(
        Invocation.getter(#databases),
        returnValue: _FakeDatabases_2(
          this,
          Invocation.getter(#databases),
        ),
      ) as _i2.Databases);

  @override
  set databases(_i2.Databases? _databases) => super.noSuchMethod(
        Invocation.setter(
          #databases,
          _databases,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.Storage get storage => (super.noSuchMethod(
        Invocation.getter(#storage),
        returnValue: _FakeStorage_3(
          this,
          Invocation.getter(#storage),
        ),
      ) as _i2.Storage);

  @override
  set storage(_i2.Storage? _storage) => super.noSuchMethod(
        Invocation.setter(
          #storage,
          _storage,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.Realtime get realtime => (super.noSuchMethod(
        Invocation.getter(#realtime),
        returnValue: _FakeRealtime_4(
          this,
          Invocation.getter(#realtime),
        ),
      ) as _i2.Realtime);

  @override
  set realtime(_i2.Realtime? _realtime) => super.noSuchMethod(
        Invocation.setter(
          #realtime,
          _realtime,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.Functions get functions => (super.noSuchMethod(
        Invocation.getter(#functions),
        returnValue: _FakeFunctions_5(
          this,
          Invocation.getter(#functions),
        ),
      ) as _i2.Functions);

  @override
  set functions(_i2.Functions? _functions) => super.noSuchMethod(
        Invocation.setter(
          #functions,
          _functions,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.Realtime get realtimeInstance => (super.noSuchMethod(
        Invocation.getter(#realtimeInstance),
        returnValue: _FakeRealtime_4(
          this,
          Invocation.getter(#realtimeInstance),
        ),
      ) as _i2.Realtime);

  @override
  _i6.Future<void> debugUserProfileLoading(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #debugUserProfileLoading,
          [userId],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<_i3.User> createAccount({
    required String? email,
    required String? password,
    required String? name,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createAccount,
          [],
          {
            #email: email,
            #password: password,
            #name: name,
          },
        ),
        returnValue: _i6.Future<_i3.User>.value(_FakeUser_6(
          this,
          Invocation.method(
            #createAccount,
            [],
            {
              #email: email,
              #password: password,
              #name: name,
            },
          ),
        )),
      ) as _i6.Future<_i3.User>);

  @override
  _i6.Future<_i3.Session> signIn({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #signIn,
          [],
          {
            #email: email,
            #password: password,
          },
        ),
        returnValue: _i6.Future<_i3.Session>.value(_FakeSession_7(
          this,
          Invocation.method(
            #signIn,
            [],
            {
              #email: email,
              #password: password,
            },
          ),
        )),
      ) as _i6.Future<_i3.Session>);

  @override
  _i6.Future<void> signOut() => (super.noSuchMethod(
        Invocation.method(
          #signOut,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> sendPasswordResetEmail(String? email) => (super.noSuchMethod(
        Invocation.method(
          #sendPasswordResetEmail,
          [email],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<_i3.User?> getCurrentUser() => (super.noSuchMethod(
        Invocation.method(
          #getCurrentUser,
          [],
        ),
        returnValue: _i6.Future<_i3.User?>.value(),
      ) as _i6.Future<_i3.User?>);

  @override
  _i6.Future<void> createUserProfile({
    required String? userId,
    required String? name,
    required String? email,
    String? bio,
    String? avatar,
    String? location,
    String? website,
    String? xHandle,
    String? linkedinHandle,
    String? youtubeHandle,
    String? facebookHandle,
    String? instagramHandle,
    List<String>? interests,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createUserProfile,
          [],
          {
            #userId: userId,
            #name: name,
            #email: email,
            #bio: bio,
            #avatar: avatar,
            #location: location,
            #website: website,
            #xHandle: xHandle,
            #linkedinHandle: linkedinHandle,
            #youtubeHandle: youtubeHandle,
            #facebookHandle: facebookHandle,
            #instagramHandle: instagramHandle,
            #interests: interests,
          },
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<_i7.UserProfile?> getUserProfile(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserProfile,
          [userId],
        ),
        returnValue: _i6.Future<_i7.UserProfile?>.value(),
      ) as _i6.Future<_i7.UserProfile?>);

  @override
  _i6.Future<void> updateUserProfile({
    required String? userId,
    String? name,
    String? bio,
    String? avatar,
    String? location,
    String? website,
    String? xHandle,
    String? linkedinHandle,
    String? youtubeHandle,
    String? facebookHandle,
    String? instagramHandle,
    List<String>? interests,
    bool? isPublicProfile,
    bool? isAvailableAsModerator,
    bool? isAvailableAsJudge,
    int? coinBalance,
    int? totalGiftsSent,
    int? totalGiftsReceived,
    int? reputation,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateUserProfile,
          [],
          {
            #userId: userId,
            #name: name,
            #bio: bio,
            #avatar: avatar,
            #location: location,
            #website: website,
            #xHandle: xHandle,
            #linkedinHandle: linkedinHandle,
            #youtubeHandle: youtubeHandle,
            #facebookHandle: facebookHandle,
            #instagramHandle: instagramHandle,
            #interests: interests,
            #isPublicProfile: isPublicProfile,
            #isAvailableAsModerator: isAvailableAsModerator,
            #isAvailableAsJudge: isAvailableAsJudge,
            #coinBalance: coinBalance,
            #totalGiftsSent: totalGiftsSent,
            #totalGiftsReceived: totalGiftsReceived,
            #reputation: reputation,
          },
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> updateUserStats({
    required String? userId,
    int? reputation,
    int? totalDebates,
    int? totalWins,
    int? totalRoomsCreated,
    int? totalRoomsJoined,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateUserStats,
          [],
          {
            #userId: userId,
            #reputation: reputation,
            #totalDebates: totalDebates,
            #totalWins: totalWins,
            #totalRoomsCreated: totalRoomsCreated,
            #totalRoomsJoined: totalRoomsJoined,
          },
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<String?> uploadAvatar({
    required String? userId,
    required _i8.Uint8List? fileBytes,
    required String? fileName,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #uploadAvatar,
          [],
          {
            #userId: userId,
            #fileBytes: fileBytes,
            #fileName: fileName,
          },
        ),
        returnValue: _i6.Future<String?>.value(),
      ) as _i6.Future<String?>);

  @override
  _i6.Future<void> deleteAvatar(String? userId) => (super.noSuchMethod(
        Invocation.method(
          #deleteAvatar,
          [userId],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> createDebateClub({
    required String? name,
    required String? description,
    required String? createdBy,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createDebateClub,
          [],
          {
            #name: name,
            #description: description,
            #createdBy: createdBy,
          },
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<List<Map<String, dynamic>>> getDebateClubs() =>
      (super.noSuchMethod(
        Invocation.method(
          #getDebateClubs,
          [],
        ),
        returnValue: _i6.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i6.Future<List<Map<String, dynamic>>>);

  @override
  _i6.Future<void> joinDebateClub({
    required String? clubId,
    required String? userId,
    required String? username,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #joinDebateClub,
          [],
          {
            #clubId: clubId,
            #userId: userId,
            #username: username,
          },
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> leaveDebateClub({
    required String? clubId,
    required String? userId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #leaveDebateClub,
          [],
          {
            #clubId: clubId,
            #userId: userId,
          },
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> createMembership({
    required String? userId,
    required String? clubId,
    String? role = 'member',
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createMembership,
          [],
          {
            #userId: userId,
            #clubId: clubId,
            #role: role,
          },
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<List<Map<String, dynamic>>> getUserMemberships(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserMemberships,
          [userId],
        ),
        returnValue: _i6.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i6.Future<List<Map<String, dynamic>>>);

  @override
  _i6.Future<List<Map<String, dynamic>>> getClubMembers(String? clubId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getClubMembers,
          [clubId],
        ),
        returnValue: _i6.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i6.Future<List<Map<String, dynamic>>>);

  @override
  _i6.Future<void> updateMembershipRole({
    required String? membershipId,
    required String? newRole,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateMembershipRole,
          [],
          {
            #membershipId: membershipId,
            #newRole: newRole,
          },
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> deleteMembership(String? membershipId) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteMembership,
          [membershipId],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<String> createRoom({
    required String? title,
    required String? description,
    required String? createdBy,
    List<String>? tags,
    int? maxParticipants = 999999,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createRoom,
          [],
          {
            #title: title,
            #description: description,
            #createdBy: createdBy,
            #tags: tags,
            #maxParticipants: maxParticipants,
          },
        ),
        returnValue: _i6.Future<String>.value(_i9.dummyValue<String>(
          this,
          Invocation.method(
            #createRoom,
            [],
            {
              #title: title,
              #description: description,
              #createdBy: createdBy,
              #tags: tags,
              #maxParticipants: maxParticipants,
            },
          ),
        )),
      ) as _i6.Future<String>);

  @override
  _i6.Future<String> createDiscussionRoom({
    required String? title,
    required String? description,
    required String? createdBy,
    required String? status,
    required bool? isPrivate,
    List<String>? tags,
    int? maxParticipants = 999999,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createDiscussionRoom,
          [],
          {
            #title: title,
            #description: description,
            #createdBy: createdBy,
            #status: status,
            #isPrivate: isPrivate,
            #tags: tags,
            #maxParticipants: maxParticipants,
          },
        ),
        returnValue: _i6.Future<String>.value(_i9.dummyValue<String>(
          this,
          Invocation.method(
            #createDiscussionRoom,
            [],
            {
              #title: title,
              #description: description,
              #createdBy: createdBy,
              #status: status,
              #isPrivate: isPrivate,
              #tags: tags,
              #maxParticipants: maxParticipants,
            },
          ),
        )),
      ) as _i6.Future<String>);

  @override
  _i6.Future<List<Map<String, dynamic>>> getRooms() => (super.noSuchMethod(
        Invocation.method(
          #getRooms,
          [],
        ),
        returnValue: _i6.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i6.Future<List<Map<String, dynamic>>>);

  @override
  _i6.Future<Map<String, dynamic>?> getRoom(String? roomId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getRoom,
          [roomId],
        ),
        returnValue: _i6.Future<Map<String, dynamic>?>.value(),
      ) as _i6.Future<Map<String, dynamic>?>);

  @override
  _i6.Future<void> joinRoom({
    required String? roomId,
    required String? userId,
    String? role = 'audience',
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #joinRoom,
          [],
          {
            #roomId: roomId,
            #userId: userId,
            #role: role,
          },
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> leaveRoom({
    required String? roomId,
    required String? userId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #leaveRoom,
          [],
          {
            #roomId: roomId,
            #userId: userId,
          },
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> updateParticipantRole({
    required String? roomId,
    required String? userId,
    required String? newRole,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateParticipantRole,
          [],
          {
            #roomId: roomId,
            #userId: userId,
            #newRole: newRole,
          },
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> updateParticipantMetadata({
    required String? roomId,
    required String? userId,
    required Map<String, dynamic>? metadata,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateParticipantMetadata,
          [],
          {
            #roomId: roomId,
            #userId: userId,
            #metadata: metadata,
          },
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<Map<String, dynamic>?> getUserRoomParticipation({
    required String? roomId,
    required String? userId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserRoomParticipation,
          [],
          {
            #roomId: roomId,
            #userId: userId,
          },
        ),
        returnValue: _i6.Future<Map<String, dynamic>?>.value(),
      ) as _i6.Future<Map<String, dynamic>?>);

  @override
  _i6.Future<void> deleteDebateClub(String? clubId) => (super.noSuchMethod(
        Invocation.method(
          #deleteDebateClub,
          [clubId],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> followUser({
    required String? followerId,
    required String? followingId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #followUser,
          [],
          {
            #followerId: followerId,
            #followingId: followingId,
          },
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> unfollowUser({
    required String? followerId,
    required String? followingId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #unfollowUser,
          [],
          {
            #followerId: followerId,
            #followingId: followingId,
          },
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<bool> isFollowing({
    required String? followerId,
    required String? followingId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #isFollowing,
          [],
          {
            #followerId: followerId,
            #followingId: followingId,
          },
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);

  @override
  _i6.Future<int> getFollowerCount(String? userId) => (super.noSuchMethod(
        Invocation.method(
          #getFollowerCount,
          [userId],
        ),
        returnValue: _i6.Future<int>.value(0),
      ) as _i6.Future<int>);

  @override
  _i6.Future<int> getFollowingCount(String? userId) => (super.noSuchMethod(
        Invocation.method(
          #getFollowingCount,
          [userId],
        ),
        returnValue: _i6.Future<int>.value(0),
      ) as _i6.Future<int>);

  @override
  _i6.Future<List<_i7.UserProfile>> getUserFollowing(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserFollowing,
          [userId],
        ),
        returnValue:
            _i6.Future<List<_i7.UserProfile>>.value(<_i7.UserProfile>[]),
      ) as _i6.Future<List<_i7.UserProfile>>);

  @override
  _i6.Future<List<_i7.UserProfile>> getUserFollowers(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserFollowers,
          [userId],
        ),
        returnValue:
            _i6.Future<List<_i7.UserProfile>>.value(<_i7.UserProfile>[]),
      ) as _i6.Future<List<_i7.UserProfile>>);

  @override
  _i6.Future<List<_i7.UserProfile>> getUserNetworkForArenaRoles(
    String? userId, {
    String? arenaRoomId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserNetworkForArenaRoles,
          [userId],
          {#arenaRoomId: arenaRoomId},
        ),
        returnValue:
            _i6.Future<List<_i7.UserProfile>>.value(<_i7.UserProfile>[]),
      ) as _i6.Future<List<_i7.UserProfile>>);

  @override
  _i6.Future<void> sendChallenge({
    required String? challengerId,
    required String? challengedId,
    required String? topic,
    String? description,
    required String? position,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendChallenge,
          [],
          {
            #challengerId: challengerId,
            #challengedId: challengedId,
            #topic: topic,
            #description: description,
            #position: position,
          },
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> respondToChallenge({
    required String? challengeId,
    required String? response,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #respondToChallenge,
          [],
          {
            #challengeId: challengeId,
            #response: response,
          },
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<List<Map<String, dynamic>>> getUserChallenges(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserChallenges,
          [userId],
        ),
        returnValue: _i6.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i6.Future<List<Map<String, dynamic>>>);

  @override
  _i6.Future<List<Map<String, dynamic>>> getUserArenaRoleNotifications(
          String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserArenaRoleNotifications,
          [userId],
        ),
        returnValue: _i6.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i6.Future<List<Map<String, dynamic>>>);

  @override
  _i6.Future<String> createDebateDiscussionRoom({
    required String? name,
    required String? description,
    required String? category,
    required String? debateStyle,
    required String? createdBy,
    bool? isPrivate = false,
    String? password,
    bool? isScheduled = false,
    DateTime? scheduledDate,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createDebateDiscussionRoom,
          [],
          {
            #name: name,
            #description: description,
            #category: category,
            #debateStyle: debateStyle,
            #createdBy: createdBy,
            #isPrivate: isPrivate,
            #password: password,
            #isScheduled: isScheduled,
            #scheduledDate: scheduledDate,
          },
        ),
        returnValue: _i6.Future<String>.value(_i9.dummyValue<String>(
          this,
          Invocation.method(
            #createDebateDiscussionRoom,
            [],
            {
              #name: name,
              #description: description,
              #category: category,
              #debateStyle: debateStyle,
              #createdBy: createdBy,
              #isPrivate: isPrivate,
              #password: password,
              #isScheduled: isScheduled,
              #scheduledDate: scheduledDate,
            },
          ),
        )),
      ) as _i6.Future<String>);

  @override
  _i6.Future<List<Map<String, dynamic>>> getDebateDiscussionRooms() =>
      (super.noSuchMethod(
        Invocation.method(
          #getDebateDiscussionRooms,
          [],
        ),
        returnValue: _i6.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i6.Future<List<Map<String, dynamic>>>);

  @override
  _i6.Future<Map<String, dynamic>?> getDebateDiscussionRoom(String? roomId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getDebateDiscussionRoom,
          [roomId],
        ),
        returnValue: _i6.Future<Map<String, dynamic>?>.value(),
      ) as _i6.Future<Map<String, dynamic>?>);

  @override
  _i6.Future<bool> validateDebateDiscussionRoomPassword({
    required String? roomId,
    required String? enteredPassword,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #validateDebateDiscussionRoomPassword,
          [],
          {
            #roomId: roomId,
            #enteredPassword: enteredPassword,
          },
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);

  @override
  _i6.Future<void> joinDebateDiscussionRoom({
    required String? roomId,
    required String? userId,
    String? role = 'participant',
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #joinDebateDiscussionRoom,
          [],
          {
            #roomId: roomId,
            #userId: userId,
            #role: role,
          },
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> leaveDebateDiscussionRoom({
    required String? roomId,
    required String? userId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #leaveDebateDiscussionRoom,
          [],
          {
            #roomId: roomId,
            #userId: userId,
          },
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<List<Map<String, dynamic>>> getDebateDiscussionParticipants(
          String? roomId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getDebateDiscussionParticipants,
          [roomId],
        ),
        returnValue: _i6.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i6.Future<List<Map<String, dynamic>>>);

  @override
  _i6.Future<void> updateDebateDiscussionParticipantRole({
    required String? roomId,
    required String? userId,
    required String? newRole,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateDebateDiscussionParticipantRole,
          [],
          {
            #roomId: roomId,
            #userId: userId,
            #newRole: newRole,
          },
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> updateDebateDiscussionRoom({
    required String? roomId,
    Map<String, dynamic>? data,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateDebateDiscussionRoom,
          [],
          {
            #roomId: roomId,
            #data: data,
          },
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<String> createArenaRoom({
    required String? challengeId,
    required String? challengerId,
    required String? challengedId,
    required String? topic,
    String? description,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createArenaRoom,
          [],
          {
            #challengeId: challengeId,
            #challengerId: challengerId,
            #challengedId: challengedId,
            #topic: topic,
            #description: description,
          },
        ),
        returnValue: _i6.Future<String>.value(_i9.dummyValue<String>(
          this,
          Invocation.method(
            #createArenaRoom,
            [],
            {
              #challengeId: challengeId,
              #challengerId: challengerId,
              #challengedId: challengedId,
              #topic: topic,
              #description: description,
            },
          ),
        )),
      ) as _i6.Future<String>);

  @override
  _i6.Future<Map<String, dynamic>?> getArenaRoom(String? roomId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getArenaRoom,
          [roomId],
        ),
        returnValue: _i6.Future<Map<String, dynamic>?>.value(),
      ) as _i6.Future<Map<String, dynamic>?>);

  @override
  _i6.Future<void> closeArenaRoom(String? roomId) => (super.noSuchMethod(
        Invocation.method(
          #closeArenaRoom,
          [roomId],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> assignArenaRole({
    required String? roomId,
    required String? userId,
    required String? role,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #assignArenaRole,
          [],
          {
            #roomId: roomId,
            #userId: userId,
            #role: role,
          },
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<List<Map<String, dynamic>>> getArenaParticipants(String? roomId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getArenaParticipants,
          [roomId],
        ),
        returnValue: _i6.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i6.Future<List<Map<String, dynamic>>>);

  @override
  _i6.Future<void> updateArenaParticipantStatus({
    required String? roomId,
    required String? userId,
    bool? completedSelection,
    Map<String, dynamic>? metadata,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateArenaParticipantStatus,
          [],
          {
            #roomId: roomId,
            #userId: userId,
            #completedSelection: completedSelection,
            #metadata: metadata,
          },
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> submitArenaJudgment({
    required String? roomId,
    required String? judgeId,
    required String? challengeId,
    required double? affirmativeArguments,
    required double? affirmativePresentation,
    required double? affirmativeRebuttal,
    required double? negativeArguments,
    required double? negativePresentation,
    required double? negativeRebuttal,
    required String? winner,
    String? comments,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #submitArenaJudgment,
          [],
          {
            #roomId: roomId,
            #judgeId: judgeId,
            #challengeId: challengeId,
            #affirmativeArguments: affirmativeArguments,
            #affirmativePresentation: affirmativePresentation,
            #affirmativeRebuttal: affirmativeRebuttal,
            #negativeArguments: negativeArguments,
            #negativePresentation: negativePresentation,
            #negativeRebuttal: negativeRebuttal,
            #winner: winner,
            #comments: comments,
          },
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> startArenaDebate(String? roomId) => (super.noSuchMethod(
        Invocation.method(
          #startArenaDebate,
          [roomId],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<Map<String, dynamic>?> getChallenge(String? challengeId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getChallenge,
          [challengeId],
        ),
        returnValue: _i6.Future<Map<String, dynamic>?>.value(),
      ) as _i6.Future<Map<String, dynamic>?>);

  @override
  _i6.Future<List<_i7.UserProfile>> getAvailableModerators({
    int? limit = 10,
    String? excludeArenaId,
    List<String>? excludeUserIds,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAvailableModerators,
          [],
          {
            #limit: limit,
            #excludeArenaId: excludeArenaId,
            #excludeUserIds: excludeUserIds,
          },
        ),
        returnValue:
            _i6.Future<List<_i7.UserProfile>>.value(<_i7.UserProfile>[]),
      ) as _i6.Future<List<_i7.UserProfile>>);

  @override
  _i6.Future<List<_i7.UserProfile>> getAvailableJudges({
    int? limit = 10,
    String? excludeArenaId,
    List<String>? excludeUserIds,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAvailableJudges,
          [],
          {
            #limit: limit,
            #excludeArenaId: excludeArenaId,
            #excludeUserIds: excludeUserIds,
          },
        ),
        returnValue:
            _i6.Future<List<_i7.UserProfile>>.value(<_i7.UserProfile>[]),
      ) as _i6.Future<List<_i7.UserProfile>>);

  @override
  _i6.Future<void> sendArenaRoleNotification({
    required String? userId,
    required String? arenaId,
    required String? topic,
    required String? role,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendArenaRoleNotification,
          [],
          {
            #userId: userId,
            #arenaId: arenaId,
            #topic: topic,
            #role: role,
          },
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<List<Map<String, dynamic>>> getActiveArenaRooms() =>
      (super.noSuchMethod(
        Invocation.method(
          #getActiveArenaRooms,
          [],
        ),
        returnValue: _i6.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i6.Future<List<Map<String, dynamic>>>);

  @override
  _i6.Future<void> updateArenaRoomJudgeCount(
    String? roomId,
    int? judgeCount,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateArenaRoomJudgeCount,
          [
            roomId,
            judgeCount,
          ],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> updateArenaRoomStatus(
    String? roomId,
    String? newStatus,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateArenaRoomStatus,
          [
            roomId,
            newStatus,
          ],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> updateArenaJudgingEnabled(
    String? roomId,
    bool? judgingEnabled,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateArenaJudgingEnabled,
          [
            roomId,
            judgingEnabled,
          ],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> respondToArenaRoleNotification({
    required String? notificationId,
    required String? response,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #respondToArenaRoleNotification,
          [],
          {
            #notificationId: notificationId,
            #response: response,
          },
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<List<_i7.UserProfile>> getAllUsers({int? limit = 100}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllUsers,
          [],
          {#limit: limit},
        ),
        returnValue:
            _i6.Future<List<_i7.UserProfile>>.value(<_i7.UserProfile>[]),
      ) as _i6.Future<List<_i7.UserProfile>>);

  @override
  _i6.Future<List<_i7.UserProfile>> searchUsers(
    String? query, {
    int? limit = 50,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchUsers,
          [query],
          {#limit: limit},
        ),
        returnValue:
            _i6.Future<List<_i7.UserProfile>>.value(<_i7.UserProfile>[]),
      ) as _i6.Future<List<_i7.UserProfile>>);

  @override
  _i6.Future<void> debugUserSearch() => (super.noSuchMethod(
        Invocation.method(
          #debugUserSearch,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> testRealtimeConnection() => (super.noSuchMethod(
        Invocation.method(
          #testRealtimeConnection,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> cleanupAbandonedArenaRooms() => (super.noSuchMethod(
        Invocation.method(
          #cleanupAbandonedArenaRooms,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> forceCleanupAllOldArenaRooms() => (super.noSuchMethod(
        Invocation.method(
          #forceCleanupAllOldArenaRooms,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> deleteAllArenaRooms() => (super.noSuchMethod(
        Invocation.method(
          #deleteAllArenaRooms,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> forceCloseArenaRoom(String? roomId) => (super.noSuchMethod(
        Invocation.method(
          #forceCloseArenaRoom,
          [roomId],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<String> createManualArenaRoom({
    required String? creatorId,
    required String? topic,
    String? description,
    int? maxParticipants = 1000,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createManualArenaRoom,
          [],
          {
            #creatorId: creatorId,
            #topic: topic,
            #description: description,
            #maxParticipants: maxParticipants,
          },
        ),
        returnValue: _i6.Future<String>.value(_i9.dummyValue<String>(
          this,
          Invocation.method(
            #createManualArenaRoom,
            [],
            {
              #creatorId: creatorId,
              #topic: topic,
              #description: description,
              #maxParticipants: maxParticipants,
            },
          ),
        )),
      ) as _i6.Future<String>);

  @override
  _i6.Future<String> createScheduledArenaRoom({
    required String? creatorId,
    required String? topic,
    String? description,
    required DateTime? scheduledTime,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createScheduledArenaRoom,
          [],
          {
            #creatorId: creatorId,
            #topic: topic,
            #description: description,
            #scheduledTime: scheduledTime,
          },
        ),
        returnValue: _i6.Future<String>.value(_i9.dummyValue<String>(
          this,
          Invocation.method(
            #createScheduledArenaRoom,
            [],
            {
              #creatorId: creatorId,
              #topic: topic,
              #description: description,
              #scheduledTime: scheduledTime,
            },
          ),
        )),
      ) as _i6.Future<String>);

  @override
  _i6.Future<String> createSimpleArenaRoom({
    required String? creatorId,
    required String? topic,
    String? description,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createSimpleArenaRoom,
          [],
          {
            #creatorId: creatorId,
            #topic: topic,
            #description: description,
          },
        ),
        returnValue: _i6.Future<String>.value(_i9.dummyValue<String>(
          this,
          Invocation.method(
            #createSimpleArenaRoom,
            [],
            {
              #creatorId: creatorId,
              #topic: topic,
              #description: description,
            },
          ),
        )),
      ) as _i6.Future<String>);

  @override
  _i6.Future<List<Map<String, dynamic>>> getJoinableArenaRooms() =>
      (super.noSuchMethod(
        Invocation.method(
          #getJoinableArenaRooms,
          [],
        ),
        returnValue: _i6.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i6.Future<List<Map<String, dynamic>>>);

  @override
  _i6.Future<void> joinArenaRoom({
    required String? roomId,
    required String? userId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #joinArenaRoom,
          [],
          {
            #roomId: roomId,
            #userId: userId,
          },
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> cleanupUnusedDiscussionRooms() => (super.noSuchMethod(
        Invocation.method(
          #cleanupUnusedDiscussionRooms,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> forceCleanupAllOldDiscussionRooms() => (super.noSuchMethod(
        Invocation.method(
          #forceCleanupAllOldDiscussionRooms,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> oneTimeCleanupOldDiscussionRooms() => (super.noSuchMethod(
        Invocation.method(
          #oneTimeCleanupOldDiscussionRooms,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<bool> sendGift({
    required String? giftId,
    required String? senderId,
    required String? recipientId,
    required String? roomId,
    required int? cost,
    String? message,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendGift,
          [],
          {
            #giftId: giftId,
            #senderId: senderId,
            #recipientId: recipientId,
            #roomId: roomId,
            #cost: cost,
            #message: message,
          },
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);

  @override
  _i6.Future<List<_i10.GiftTransaction>> getRoomGiftTransactions(
    String? roomId, {
    int? limit = 50,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getRoomGiftTransactions,
          [roomId],
          {#limit: limit},
        ),
        returnValue: _i6.Future<List<_i10.GiftTransaction>>.value(
            <_i10.GiftTransaction>[]),
      ) as _i6.Future<List<_i10.GiftTransaction>>);

  @override
  _i6.Future<List<_i10.GiftTransaction>> getUserGiftsSent(
    String? userId, {
    int? limit = 20,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserGiftsSent,
          [userId],
          {#limit: limit},
        ),
        returnValue: _i6.Future<List<_i10.GiftTransaction>>.value(
            <_i10.GiftTransaction>[]),
      ) as _i6.Future<List<_i10.GiftTransaction>>);

  @override
  _i6.Future<List<_i10.GiftTransaction>> getUserGiftsReceived(
    String? userId, {
    int? limit = 20,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserGiftsReceived,
          [userId],
          {#limit: limit},
        ),
        returnValue: _i6.Future<List<_i10.GiftTransaction>>.value(
            <_i10.GiftTransaction>[]),
      ) as _i6.Future<List<_i10.GiftTransaction>>);

  @override
  _i6.Future<bool> addCoinsToUser(
    String? userId,
    int? amount, {
    String? reason,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addCoinsToUser,
          [
            userId,
            amount,
          ],
          {#reason: reason},
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);
}

/// A class which mocks [AppLogger].
///
/// See the documentation for Mockito's code generation for more information.
class MockAppLogger extends _i1.Mock implements _i11.AppLogger {
  MockAppLogger() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Logger get logger => (super.noSuchMethod(
        Invocation.getter(#logger),
        returnValue: _FakeLogger_8(
          this,
          Invocation.getter(#logger),
        ),
      ) as _i4.Logger);

  @override
  void initialize() => super.noSuchMethod(
        Invocation.method(
          #initialize,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void debug(
    String? message, [
    dynamic error,
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #debug,
          [
            message,
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void info(
    String? message, [
    dynamic error,
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #info,
          [
            message,
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void warning(
    String? message, [
    dynamic error,
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #warning,
          [
            message,
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void error(
    String? message, [
    dynamic error,
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #error,
          [
            message,
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void logError(_i12.AppError? error) => super.noSuchMethod(
        Invocation.method(
          #logError,
          [error],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void logNetworkCall(
    String? method,
    String? url, [
    Map<String, dynamic>? data,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #logNetworkCall,
          [
            method,
            url,
            data,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void logUserAction(
    String? action, [
    Map<String, dynamic>? context,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #logUserAction,
          [
            action,
            context,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void logPerformance(
    String? operation,
    Duration? duration,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #logPerformance,
          [
            operation,
            duration,
          ],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [SoundService].
///
/// See the documentation for Mockito's code generation for more information.
class MockSoundService extends _i1.Mock implements _i13.SoundService {
  MockSoundService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get isSoundEnabled => (super.noSuchMethod(
        Invocation.getter(#isSoundEnabled),
        returnValue: false,
      ) as bool);

  @override
  _i6.Future<void> initialize() => (super.noSuchMethod(
        Invocation.method(
          #initialize,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  void setSoundEnabled(bool? enabled) => super.noSuchMethod(
        Invocation.method(
          #setSoundEnabled,
          [enabled],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i6.Future<void> playChallengeSound() => (super.noSuchMethod(
        Invocation.method(
          #playChallengeSound,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> play30SecWarningSound() => (super.noSuchMethod(
        Invocation.method(
          #play30SecWarningSound,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> playArenaZeroSound() => (super.noSuchMethod(
        Invocation.method(
          #playArenaZeroSound,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> playApplauseSound() => (super.noSuchMethod(
        Invocation.method(
          #playApplauseSound,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> playDeniedSound() => (super.noSuchMethod(
        Invocation.method(
          #playDeniedSound,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> playInstantMessageSound() => (super.noSuchMethod(
        Invocation.method(
          #playInstantMessageSound,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> playEmailSound() => (super.noSuchMethod(
        Invocation.method(
          #playEmailSound,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> playCustomSound(String? fileName) => (super.noSuchMethod(
        Invocation.method(
          #playCustomSound,
          [fileName],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> stopSound() => (super.noSuchMethod(
        Invocation.method(
          #stopSound,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> testSound() => (super.noSuchMethod(
        Invocation.method(
          #testSound,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
